name: Unit Tests

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development
  release:
    branches:
      - master
      
env:
  PROJECT: ${{ github.event.repository.name }}.xcodeproj
  SCHEME: ${{ github.event.repository.name }}
  TEST_SCHEME: ${{ github.event.repository.name }}Tests


jobs:
  xcodebuild_iOS_build_and_test:
    name: iOS Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
          os: [macOS-latest]
          destination: ['platform=iOS Simulator,OS=13.5,name=iPhone 11 Pro Max']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check environment variables
        run: |
         echo PROJECT: $PROJECT
         echo SCHEME: $SCHEME
         echo TEST_SCHEME: $TEST_SCHEME
      - name: Check brew version
        run: |
          brew -v
      - name: Check xcodebuild version
        run: |
          xcodebuild -version
          type -a xcodebuild
      - name: Check xcode-select version
        run: |
          xcode-select -version
          type -a xcode-select
      - name: Check availabble devices
        run: |
          instruments -s devices
      - name: Update brew
        run: |
          brew update
      - name: Install Carthage
        run: |
          brew outdated carthage || brew upgrade carthage
      - name: Check carthage version
        run: |
          carthage version
          type -a carthage
      - name: Install dependencies
        run: |
          carthage bootstrap --platform iOS
      - name: Clean xcodeproject
        run: |
          xcodebuild clean
      - name: Build xcodeproject
        run: |
          xcodebuild build -project $PROJECT -scheme $SCHEME CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
      - name: Test xcodeproject
        run: |
          xcodebuild test -project $PROJECT -scheme $TEST_SCHEME -destination "$DESTINATION" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
        env:
          DESTINATION: ${{ matrix.destination }}
      - name: Update code coverage
        run: |
          bash <(curl -s $CODE_COVERAGE -J $SCHEME
        env:
          CODE_COVERAGE: https://codecov.io/bash)

